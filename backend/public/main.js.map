{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/guards/authguard.guard.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './guards/authguard.guard';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n\n  { path: 'signup', component: SignupComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '', component: HomeComponent, canActivate:[AuthGuard] },\n  { path: '**', redirectTo: ''}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'My Contacts App';\n  isAuthenticated: boolean = false\n}\n","<mat-toolbar color=\"primary\" class=\"expanded-toolbar\">\n  <span>\n    <button mat-button routerLink=\"/\">{{title}}</button>\n    <button mat-button routerLink=\"/\"><mat-icon>home</mat-icon></button>\n  </span>\n<div fxLayout=\"row\" fxShow=\"false\" fxShow.gt-sm>\n  <button mat-button routerLink=\"/login\" *ngIf=\"!isAuthenticated\">\n    <mat-icon>power_settings_new</mat-icon>\n    Login\n  </button>\n  <button mat-button routerLink=\"/signup\" *ngIf=\"!isAuthenticated\">\n    <mat-icon>gamepad</mat-icon>\n    Signup\n  </button>\n  <button mat-button *ngIf=\"isAuthenticated\">\n    <mat-icon>exit_to_app</mat-icon>\n    Logout\n  </button>\n \n</div>\n</mat-toolbar>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {   MatToolbarModule } from '@angular/material/toolbar'\nimport {   MatMenuModule } from '@angular/material/menu'\nimport {   MatIconModule } from '@angular/material/icon'\nimport {   MatButtonModule } from '@angular/material/button'\nimport {   MatTableModule } from '@angular/material/table'\nimport {   MatDividerModule } from '@angular/material/divider'\nimport {   MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport {   MatInputModule } from '@angular/material/input'\nimport {   MatCardModule } from '@angular/material/card'\nimport {   MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport {   MatSelectModule } from '@angular/material/select';\nimport { LoginComponent } from './components/login/login.component'\n//import {   MatOptionModule} from '@angular/material/select'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    HomeComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,    \n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    //MatOptionModule,\n    MatProgressSpinnerModule\n  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service'\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n\n  // Defining variables required \n  signupForm: FormGroup\n  submitted:boolean = false\n  errorMsg:string = \"\"\n  constructor(private fb:FormBuilder,\n    private router:Router,\n    private userService:UserService) { \n\n    // Initializing Form controls\n    this.initializeForm()\n\n    }\n\n  ngOnInit(): void {\n  }\n\n  // defining controls required in this \n  // login form with the validators\n  initializeForm(){\n    this.signupForm = this.fb.group({\n      username:['',[Validators.required, Validators.pattern('^(?:\\\\d{10}|\\\\w+@\\\\w+\\\\.\\\\w{2,3})$')]],\n      password:['',Validators.required]\n    })\n  }\n\n  // Submit user form to login in case all the validation are a SUCCESS\n  onSubmit(user){\n    this.submitted = true\n   \n    \n    // In case of form is not valid, return\n    if(this.signupForm.invalid){    \n      return\n    }\n\n    this.userService.signupUser(user).subscribe((data)=>{\n    if(data){\n        this.errorMsg = \"\"\n  \n        // On success\n        if(data[\"success\"])\n        {    \n          // Set local storage to maintain user session\n          localStorage.setItem(\"user\",JSON.stringify(data[\"data\"]))\n          // Route to dashboard on successful login\n          this.router.navigate(['/'])\n        }\n      }\n    },(err)=>{      \n      // In case of error show error message\n      if(err.error){\n        this.errorMsg = err.error.message;       \n      }      \n    })\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit(signupForm.value)\">\n        <h2>Log In</h2>\n        <mat-error *ngIf=\"errorMsg\">\n          {{errorMsg}}\n        </mat-error>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput placeholder=\"Email/Phone Number\" formControlName=\"username\" required>\n          <mat-error>\n            Please provide a valid email address or a valid phone number\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\n          <mat-error>\n            Please provide a valid password\n          </mat-error>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\">SignUp</button>\n      </form>\n    </mat-card-content>\n  </mat-card>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router:Router){ }\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n      if (localStorage.getItem('user')) {\n        // logged in so return true\n\n        // let storageUser = JSON.parse(localStorage.getItem('user'))\n        \n        // if(storageUser.userType == \"user\" && next.url.toString()=='doctor'){\n        //   this.router.navigate(['/user']);\n        // }\n        // if(storageUser.userType == \"doctor\" && next.url.toString()=='user'){\n        //   this.router.navigate(['/doctor']);\n        // }\n        \n        return true;\n      }\n      // in case user not signed up redirect to login\n      this.router.navigate(['/login']);\n  }\n\n\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  SERVER_URL = environment.serverURL\n  constructor(private httpClient:HttpClient) { }\n\n  signupUser(user){\n    return this.httpClient.post(this.SERVER_URL+\"/user/signup\", user)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverURL:'http://localhost:3000/api'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}